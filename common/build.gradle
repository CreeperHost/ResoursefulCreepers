plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id "maven-publish"
}

loom {
    accessWidenerPath = file("src/main/resources/resourcefulcreepers.accesswidener")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"
    modApi("net.creeperhost:polylib-fabric:${rootProject.polylib_version}")

//    implementation "blue.endless:jankson:1.2.1"
    implementation 'io.sentry:sentry:5.7.2'
}

def targetPackage = 'net/creeperhost/resourcefulcreepers'
def targetPackageJava = 'net.creeperhost.resourcefulcreepers'

compileJava {
    doFirst {
        ant.mkdir(dir: "${projectDir}/src/main/java/${targetPackage}")
        def newBuildInfo = new File("${projectDir}/src/main/java/${targetPackage}/BuildInfo.java")
        def templateBuildInfo = new File("${projectDir}/templates/TemplateBuildInfo.java")
        def buildTimeStamp = new Date().toString()

        newBuildInfo.withWriter { def writer ->
            templateBuildInfo.eachLine { def line ->
                def newLine = line.replace("__PACKAGE", targetPackageJava)
                        .replace("__VERSION", versionDetails().gitHash)
                        .replace("__BUILD_TIMESTAMP", buildTimeStamp)
                writer.write(newLine + "\n");
            }
        }
    }
}

architectury {
    common("fabric", "forge", "neoforge")
}



publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
